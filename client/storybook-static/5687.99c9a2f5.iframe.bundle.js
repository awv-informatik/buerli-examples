"use strict";(self.webpackChunkbuerli_examples_client=self.webpackChunkbuerli_examples_client||[]).push([[5687],{"./node_modules/raw-loader/dist/cjs.js!./src/solid/models/polyline-revolve.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="import { ApiNoHistory, createPolyline } from '@buerli.io/headless'\r\nimport * as THREE from 'three'\r\n\r\nexport const create = async (api: ApiNoHistory) => {\r\n  const fp0 = { point: new THREE.Vector3(0, 25, 0), radius: 50 }\r\n  const fp1 = { point: new THREE.Vector3(75, 25, 0), radius: 0 }\r\n  const fp2 = { point: new THREE.Vector3(75, 0, 0), radius: 0 }\r\n  const fp3 = { point: new THREE.Vector3(100, 0, 0), radius: 20 }\r\n  const fp4 = { point: new THREE.Vector3(150, 120, 0), radius: 0 }\r\n  const fp5 = { point: new THREE.Vector3(25, 75, 0), radius: 5 }\r\n  const fp6 = { point: new THREE.Vector3(25, 100, 0), radius: 0 }\r\n  const fp7 = { point: new THREE.Vector3(0, 100, 0), radius: 10 }\r\n  const polyline = createPolyline([fp0, fp1, fp2, fp3, fp4, fp5, fp6, fp7])\r\n  const revolve = api.revolve([-10, 0, 0], [0, 1, 0], Math.PI, polyline)\r\n  const geom = await api.createBufferGeometry(revolve)\r\n  const mesh = new THREE.Mesh(\r\n    geom,\r\n    new THREE.MeshStandardMaterial({ transparent: true, opacity: 1, color: new THREE.Color('rgb(237, 47, 174)') }),\r\n  )\r\n  return [mesh]\r\n}\r\n\r\nexport default create\r\n"}}]);