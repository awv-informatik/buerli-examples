"use strict";(self.webpackChunkbuerli_examples_client=self.webpackChunkbuerli_examples_client||[]).push([[9043],{"./node_modules/raw-loader/dist/cjs.js!./src/history/models/CreateAsm_Example.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="import { FlipType, ReorientedType, BooleanOperationType, WorkCoordSystemType } from '@buerli.io/classcad'\r\nimport { ApiHistory } from '@buerli.io/headless'\r\nimport { ParamType } from '../store'\r\n\r\nexport const create = async (api: ApiHistory, params?: ParamType) => {\r\n  /* consts */\r\n  const pt0 = { x: 0, y: 0, z: 0 }\r\n  const pt1 = { x: 50, y: 0, z: 0 }\r\n  const pt2 = { x: 100, y: 0, z: 0 }\r\n  const pt3 = { x: 0, y: 0, z: 0 }\r\n  const xDir = { x: 1, y: 0, z: 0 }\r\n  const yDir = { x: 0, y: 1, z: 0 }\r\n  const nullPos = { x: 0, y: 0, z: 0 }\r\n  const nullRot = { x: 0, y: 0, z: 0 }\r\n\r\n  /* root assembly */\r\n  const lBracketAsm = await api.createRootAssembly('L_Bracket_Assembly')\r\n\r\n  /* nut part */\r\n  const wcsNut = {\r\n    boxPos: nullPos,\r\n    boxRot: nullRot,\r\n    cylPos: { x: 15, y: 15, z: 0 },\r\n    cylRot: nullRot,\r\n    mate1Pos: { x: 15, y: 15, z: 0 },\r\n    mate1Rot: nullRot,\r\n  }\r\n  const nut = await api.createPartAsTemplate('Nut')\r\n  const wcsBoxNut = await api.createWorkCoordSystem(\r\n    nut,\r\n    WorkCoordSystemType.WCS_CUSTOM,\r\n    [],\r\n    [],\r\n    wcsNut.boxPos,\r\n    wcsNut.boxRot,\r\n    0,\r\n    false,\r\n    'wcsBoxNut',\r\n  )\r\n  const wcsCylNut = await api.createWorkCoordSystem(\r\n    nut,\r\n    WorkCoordSystemType.WCS_CUSTOM,\r\n    [],\r\n    [],\r\n    wcsNut.cylPos,\r\n    wcsNut.cylRot,\r\n    0,\r\n    false,\r\n    'wcsCylNut',\r\n  )\r\n  const mate1Nut = await api.createWorkCoordSystem(\r\n    nut,\r\n    WorkCoordSystemType.WCS_CUSTOM,\r\n    [],\r\n    [],\r\n    wcsNut.mate1Pos,\r\n    wcsNut.mate1Rot,\r\n    0,\r\n    false,\r\n    'mate1Nut',\r\n  )\r\n  const boxNut = api.box(nut, [wcsBoxNut], 30, 30, 10)\r\n  const cylNut = api.cylinder(nut, [wcsCylNut], 20, 40)\r\n  api.boolean(nut, BooleanOperationType.SUBTRACTION, [boxNut, cylNut])\r\n\r\n  /* bolt part */\r\n  const wcsBolt = {\r\n    shaftPos: { x: 0, y: 0, z: 0 },\r\n    shaftRot: nullRot,\r\n    headPos: { x: 0, y: 0, z: -10 },\r\n    headRot: nullRot,\r\n    mate1Pos: nullPos,\r\n    mate1Rot: nullRot,\r\n  }\r\n  const bolt = await api.createPartAsTemplate('Bolt')\r\n  const wcsShaftBolt = await api.createWorkCoordSystem(\r\n    bolt,\r\n    WorkCoordSystemType.WCS_CUSTOM,\r\n    [],\r\n    [],\r\n    wcsBolt.shaftPos,\r\n    wcsBolt.shaftRot,\r\n    0,\r\n    false,\r\n    'wcsShaftBolt',\r\n  )\r\n  const wcsHeadBolt = await api.createWorkCoordSystem(\r\n    bolt,\r\n    WorkCoordSystemType.WCS_CUSTOM,\r\n    [],\r\n    [],\r\n    wcsBolt.headPos,\r\n    wcsBolt.headRot,\r\n    0,\r\n    false,\r\n    'wcsHeadBolt',\r\n  )\r\n  const mate1Bolt = await api.createWorkCoordSystem(\r\n    bolt,\r\n    WorkCoordSystemType.WCS_CUSTOM,\r\n    [],\r\n    [],\r\n    wcsBolt.mate1Pos,\r\n    wcsBolt.mate1Rot,\r\n    0,\r\n    false,\r\n    'mate1Bolt',\r\n  )\r\n  const shaft = api.cylinder(bolt, [wcsShaftBolt], 20, 60)\r\n  const head = api.cylinder(bolt, [wcsHeadBolt], 30, 10)\r\n  api.boolean(bolt, BooleanOperationType.UNION, [shaft, head])\r\n\r\n  /* lbracket part */\r\n  const wcsLBracket = {\r\n    basePos: nullPos,\r\n    baseRot: nullRot,\r\n    subPos: { x: 20, y: 0, z: 20 },\r\n    subRot: nullRot,\r\n    mate1Pos: { x: 75, y: 50, z: 0 },\r\n    mate1Rot: nullRot,\r\n    mate2Pos: { x: 45, y: 100, z: 0 },\r\n    mate2Rot: nullRot,\r\n    mate3Pos: { x: 75, y: 150, z: 0 },\r\n    mate3Rot: nullRot,\r\n  }\r\n  const lBracket = await api.createPartAsTemplate('L_Bracket')\r\n  const wcsBaseBracket = await api.createWorkCoordSystem(\r\n    lBracket,\r\n    WorkCoordSystemType.WCS_CUSTOM,\r\n    [],\r\n    [],\r\n    wcsLBracket.basePos,\r\n    wcsLBracket.baseRot,\r\n    0,\r\n    false,\r\n    'wcsBaseBracket',\r\n  )\r\n  const wcsSubBracket = await api.createWorkCoordSystem(\r\n    lBracket,\r\n    WorkCoordSystemType.WCS_CUSTOM,\r\n    [],\r\n    [],\r\n    wcsLBracket.subPos,\r\n    wcsLBracket.subRot,\r\n    0,\r\n    false,\r\n    'wcsSubBracket',\r\n  )\r\n  const baseBracket = api.box(lBracket, [wcsBaseBracket], 200, 100, 100)\r\n  const subBracket = api.box(lBracket, [wcsSubBracket], 200, 100, 100)\r\n  const mate1LBracket = await api.createWorkCoordSystem(\r\n    lBracket,\r\n    WorkCoordSystemType.WCS_CUSTOM,\r\n    [],\r\n    [],\r\n    wcsLBracket.mate1Pos,\r\n    wcsLBracket.mate1Rot,\r\n    0,\r\n    false,\r\n    'mate1LBracket',\r\n  )\r\n  const mate2LBracket = await api.createWorkCoordSystem(\r\n    lBracket,\r\n    WorkCoordSystemType.WCS_CUSTOM,\r\n    [],\r\n    [],\r\n    wcsLBracket.mate2Pos,\r\n    wcsLBracket.mate2Rot,\r\n    0,\r\n    false,\r\n    'mate2LBracket',\r\n  )\r\n  const mate3LBracket = await api.createWorkCoordSystem(\r\n    lBracket,\r\n    WorkCoordSystemType.WCS_CUSTOM,\r\n    [],\r\n    [],\r\n    wcsLBracket.mate3Pos,\r\n    wcsLBracket.mate3Rot,\r\n    0,\r\n    false,\r\n    'mate3LBracket',\r\n  )\r\n  const sub1Bracket = api.cylinder(lBracket, [mate1LBracket], 20, 40)\r\n  const sub2Bracket = api.cylinder(lBracket, [mate2LBracket], 20, 40)\r\n  const sub3Bracket = api.cylinder(lBracket, [mate3LBracket], 20, 40)\r\n  api.boolean(lBracket, BooleanOperationType.SUBTRACTION, [\r\n    baseBracket,\r\n    subBracket,\r\n    sub1Bracket,\r\n    sub2Bracket,\r\n    sub3Bracket,\r\n  ])\r\n\r\n  /* nut-bolt assembly */\r\n  const nutBoltAsm = await api.createAssemblyAsTemplate('Nut_Bolt_Assembly')\r\n  const nutRef = await api.addNode(nut, nutBoltAsm, [pt0, xDir, yDir])\r\n  const boltRef = await api.addNode(bolt, nutBoltAsm, [pt0, xDir, yDir])\r\n\r\n  await api.createFastenedOriginConstraint(\r\n    nutBoltAsm,\r\n    { matePath: [boltRef], wcsId: mate1Bolt, flip: FlipType.FLIP_Z, reoriented: ReorientedType.REORIENTED_0 },\r\n    0,\r\n    0,\r\n    0,\r\n    'FOC1',\r\n  )\r\n\r\n  await api.createFastenedConstraint(\r\n    nutBoltAsm,\r\n    { matePath: [nutRef], wcsId: mate1Nut, flip: FlipType.FLIP_Z, reoriented: ReorientedType.REORIENTED_0 },\r\n    { matePath: [boltRef], wcsId: mate1Bolt, flip: FlipType.FLIP_Z, reoriented: ReorientedType.REORIENTED_0 },\r\n    0,\r\n    0,\r\n    -20,\r\n    'FC1',\r\n  )\r\n\r\n  /* l-bracket assembly */\r\n  const nutBoltRef0 = await api.addNode(nutBoltAsm, lBracketAsm, [pt0, xDir, yDir])\r\n  const nutBoltRef1 = await api.addNode(nutBoltAsm, lBracketAsm, [pt1, xDir, yDir])\r\n  const nutBoltRef2 = await api.addNode(nutBoltAsm, lBracketAsm, [pt2, xDir, yDir])\r\n  const lBracketRef = await api.addNode(lBracket, lBracketAsm, [pt3, xDir, yDir])\r\n  await api.createFastenedOriginConstraint(\r\n    lBracketAsm,\r\n    { matePath: [lBracketRef], wcsId: mate1LBracket, flip: FlipType.FLIP_Z, reoriented: ReorientedType.REORIENTED_0 },\r\n    0,\r\n    0,\r\n    20,\r\n    'FOC2',\r\n  )\r\n\r\n  await api.createFastenedConstraint(\r\n    lBracketAsm,\r\n    { matePath: [lBracketRef], wcsId: mate1LBracket, flip: FlipType.FLIP_Z, reoriented: ReorientedType.REORIENTED_0 },\r\n    {\r\n      matePath: [nutBoltRef0],\r\n      wcsId: wcsShaftBolt,\r\n      flip: FlipType.FLIP_Z_INV,\r\n      reoriented: ReorientedType.REORIENTED_0,\r\n    },\r\n    0,\r\n    0,\r\n    20,\r\n\r\n    'FC2',\r\n  )\r\n  await api.createFastenedConstraint(\r\n    lBracketAsm,\r\n    { matePath: [lBracketRef], wcsId: mate2LBracket, flip: FlipType.FLIP_Z, reoriented: ReorientedType.REORIENTED_0 },\r\n    {\r\n      matePath: [nutBoltRef1],\r\n      wcsId: wcsShaftBolt,\r\n      flip: FlipType.FLIP_Z_INV,\r\n      reoriented: ReorientedType.REORIENTED_0,\r\n    },\r\n    0,\r\n    0,\r\n    20,\r\n    'FC3',\r\n  )\r\n  await api.createFastenedConstraint(\r\n    lBracketAsm,\r\n    { matePath: [lBracketRef], wcsId: mate3LBracket, flip: FlipType.FLIP_Z, reoriented: ReorientedType.REORIENTED_0 },\r\n    {\r\n      matePath: [nutBoltRef2],\r\n      wcsId: wcsShaftBolt,\r\n      flip: FlipType.FLIP_Z_INV,\r\n      reoriented: ReorientedType.REORIENTED_0,\r\n    },\r\n    0,\r\n    0,\r\n    20,\r\n    'FC4',\r\n  )\r\n  return lBracketAsm\r\n}\r\n\r\nexport default create\r\n"}}]);