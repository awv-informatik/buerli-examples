(self.webpackChunkbuerli_examples_client=self.webpackChunkbuerli_examples_client||[]).push([[5637],{"./node_modules/codemirror/mode/asciiarmor/asciiarmor.js":function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){!function(CodeMirror){"use strict";function errorIfNotEmpty(stream){var nonWS=stream.match(/^\s*\S/);return stream.skipToEnd(),nonWS?"error":null}CodeMirror.defineMode("asciiarmor",(function(){return{token:function(stream,state){var m;if("top"==state.state)return stream.sol()&&(m=stream.match(/^-----BEGIN (.*)?-----\s*$/))?(state.state="headers",state.type=m[1],"tag"):errorIfNotEmpty(stream);if("headers"==state.state){if(stream.sol()&&stream.match(/^\w+:/))return state.state="header","atom";var result=errorIfNotEmpty(stream);return result&&(state.state="body"),result}return"header"==state.state?(stream.skipToEnd(),state.state="headers","string"):"body"==state.state?stream.sol()&&(m=stream.match(/^-----END (.*)?-----\s*$/))?m[1]!=state.type?"error":(state.state="end","tag"):stream.eatWhile(/[A-Za-z0-9+\/=]/)?null:(stream.next(),"error"):"end"==state.state?errorIfNotEmpty(stream):void 0},blankLine:function(state){"headers"==state.state&&(state.state="body")},startState:function(){return{state:"top",type:null}}}})),CodeMirror.defineMIME("application/pgp","asciiarmor"),CodeMirror.defineMIME("application/pgp-encrypted","asciiarmor"),CodeMirror.defineMIME("application/pgp-keys","asciiarmor"),CodeMirror.defineMIME("application/pgp-signature","asciiarmor")}(__webpack_require__("./node_modules/codemirror/lib/codemirror.js"))}}]);